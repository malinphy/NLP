# -*- coding: utf-8 -*-
"""SciBERT demo.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1HUoQiRKgwlTfZv44ZT8vrJqtSY9B2sXE
"""

!pip install --quiet tensorflow-text
!pip install --quiet tokenizers
from model import squad_model
# import tensorflow as tf 
# from tensorflow import keras
# from tensorflow.keras import layers,Input,Model
# from tensorflow.keras.layers import * 
from tensorflow.keras.preprocessing.sequence import pad_sequences
import tensorflow_hub as hub 
from tokenizers import BertWordPieceTokenizer
import tensorflow_text as text 
import numpy as np

from google.colab import drive
drive.mount('/content/drive')

squad_model = squad_model()

import os 
os.listdir('drive/MyDrive/Colab Notebooks/squad')

squad_model.load_weights('drive/MyDrive/Colab Notebooks/squad/bert_squad_weights_epochs2_2.h5')

bert_layer = hub.KerasLayer("https://tfhub.dev/tensorflow/bert_en_uncased_L-12_H-768_A-12/2", trainable=True)
vocab_file = bert_layer.resolved_object.vocab_file.asset_path.numpy().decode("utf-8")
tokenizer = BertWordPieceTokenizer(vocab=vocab_file, lowercase=True)

train_context = 'Super Bowl 50 was an American football game to determine the champion of the National Football League (NFL) for the 2015 season. The American Football Conference (AFC) champion Denver Broncos defeated the National Football Conference (NFC) champion Carolina Panthers 24â€“10 to earn their third Super Bowl title. The game was played on February 7, 2016, at Levi\'s Stadium in the San Francisco Bay Area at Santa Clara, California. As this was the 50th Super Bowl, the league emphasized the "golden anniversary" with various gold-themed initiatives, as well as temporarily suspending the tradition of naming each Super Bowl game with Roman numerals (under which the game would have been known as "Super Bowl L"), so that the logo could prominently feature the Arabic numerals 50.'
test_data_0 = 'Which NFL team represented the AFC at Super Bowl 50?'
test_data_1 = 'Which NFL team represented the NFC at Super Bowl 50?'
test_data_2 = 'Where did Super Bowl 50 take place?'
test_data_3 = 'Which NFL team won Super Bowl 50?'
test_data_4 = 'What color was used to emphasize the 50th anniversary of the Super Bowl?'
test_data_5 = 'What was the theme of Super Bowl 50?'
test_data_6 = 'What day was the game played on?'
test_data_7 = 'What is the AFC short for?'
test_data_8 = 'What was the theme of Super Bowl 50?'
test_data_9 = 'What does AFC stand for?'
test_data_10 = 'What day was the Super Bowl played on?'
test_data_11 = 'Who won Super Bowl 50?'
test_data_12 = 'What venue did Super Bowl 50 take place in?'
test_data_13 = 'What city did Super Bowl 50 take place in?'
test_data_14 = 'If Roman numerals were used, what would Super Bowl 50 have been called?'
test_data_15 = 'Super Bowl 50 decided the NFL champion for what season?'
test_data_16 = 'What year did the Denver Broncos secure a Super Bowl title for the third time?'
test_data_17 = 'What city did Super Bowl 50 take place in?'
test_data_18 = 'What stadium did Super Bowl 50 take place in?'
test_data_19 = 'What was the final score of Super Bowl 50? '

def encoder(x,y):
    tokenizer = BertWordPieceTokenizer(vocab=vocab_file, lowercase=True)
    ids = []
    type_ids = []
    attention_mask = []
    ids_len = []
    for i in range(len(x)):
        var1 = tokenizer.encode(x[i],y[i])
        ids.append(var1.ids)
        type_ids.append(var1.type_ids)
        attention_mask.append(var1.attention_mask)
        ids_len.append(len(var1.ids))
    return ids, type_ids, attention_mask

def padder(x,pad_len):
    padded_var = pad_sequences(
    x,
    maxlen=pad_len,
    dtype='int32',
    padding='post',
    truncating='post',
    value=0.0
    )
    return padded_var

ids, type_ids, attention_mask = encoder([train_context],[test_data_18])
test_data_19

input_len = 384
pad_ids = padder(ids,input_len)
pad_type_ids = padder(type_ids,input_len)
pad_attention_mask = padder(attention_mask,input_len)

bir, iki  = squad_model.predict([
            (pad_ids), 
            (pad_type_ids), 
            (pad_attention_mask)
            ])

print(np.argmax(bir))
print(np.argmax(iki))

' '.join(tokenizer.encode(train_context).tokens[np.argmax(bir):np.argmax(iki)])

